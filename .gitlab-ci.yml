variables:
  DEPLOY_USER: "gitlab-runner-user"
  SERVICE_NAME: "sa-frontend"

.build-and-push-script: &build-and-push
  - docker build -t $SERVICE_NAME --cache-from $CI_REGISTRY_IMAGE/latest -f dockerfiles/Dockerfile --build-arg REACT_APP_API_URL=$REACT_APP_API_URL --build-arg REACT_APP_ENVIRONMENT=$REACT_APP_ENVIRONMENT --build-arg REACT_APP_SENTRY_DSN=$REACT_APP_SENTRY_DSN .
  - docker tag $SERVICE_NAME $CI_REGISTRY_IMAGE/$CI_COMMIT_SHORT_SHA
  - docker tag $SERVICE_NAME $CI_REGISTRY_IMAGE/latest
  - docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_SHORT_SHA
  - docker push $CI_REGISTRY_IMAGE/latest
  - echo $CI_REGISTRY/$CI_COMMIT_SHORT_SHA

stages:
  - test
  - build

test:
  image: docker/compose:latest
  tags:
    - $RUNNER_TAG
  stage: test
  environment:
    name: testing
  script:
    - echo "Running tests"
    - docker-compose -f docker-compose-tests.yml build $SERVICE_NAME
    - docker-compose -f docker-compose-tests.yml run --rm $SERVICE_NAME

build&push-dev:
  image: docker:stable
  tags:
    - $RUNNER_TAG
  stage: build
  only:
    refs:
      - dev
  variables:
    REACT_APP_ENVIRONMENT: development
    REACT_APP_API_URL: $REACT_APP_API_URL_DEV
    REACT_APP_SENTRY_DSN: $REACT_APP_SENTRY_DSN
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    *build-and-push